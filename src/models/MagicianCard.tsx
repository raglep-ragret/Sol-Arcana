/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Plane_1: THREE.Mesh;
    Plane_2: THREE.Mesh;
  };
  materials: {
    FACE: THREE.MeshStandardMaterial;
    BACK: THREE.MeshStandardMaterial;
  };
};

export default function MagicianCard({
  ...props
}: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    "/magician-v2-transformed.glb"
  ) as GLTFResult;

  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={[0.8, 1, 1.2]}>
        <mesh geometry={nodes.Plane_1.geometry} material={materials.FACE} />
        <mesh geometry={nodes.Plane_2.geometry} material={materials.BACK} />
      </group>
    </group>
  );
}

useGLTF.preload("/magician-v2-transformed.glb");
